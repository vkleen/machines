diff --git a/src/documents/classifier.py b/src/documents/classifier.py
index 2779fad7..4b9b89cc 100644
--- a/src/documents/classifier.py
+++ b/src/documents/classifier.py
@@ -79,6 +79,7 @@ class DocumentClassifier:
         self._stop_words = None
 
     def load(self):
+        pass
         # Catch warnings for processing
         with warnings.catch_warnings(record=True) as w:
             with open(settings.MODEL_FILE, "rb") as f:
@@ -115,6 +116,7 @@ class DocumentClassifier:
                         raise IncompatibleClassifierVersionError()
 
     def save(self):
+        pass
         target_file = settings.MODEL_FILE
         target_file_temp = settings.MODEL_FILE + ".part"
 
@@ -135,6 +137,7 @@ class DocumentClassifier:
         shutil.move(target_file_temp, target_file)
 
     def train(self):
+        return False
 
         data = []
         labels_tags = []
@@ -342,6 +345,7 @@ class DocumentClassifier:
         return content
 
     def predict_correspondent(self, content):
+        return None
         if self.correspondent_classifier:
             X = self.data_vectorizer.transform([self.preprocess_content(content)])
             correspondent_id = self.correspondent_classifier.predict(X)
@@ -353,6 +357,7 @@ class DocumentClassifier:
             return None
 
     def predict_document_type(self, content):
+        return None
         if self.document_type_classifier:
             X = self.data_vectorizer.transform([self.preprocess_content(content)])
             document_type_id = self.document_type_classifier.predict(X)
@@ -364,6 +369,7 @@ class DocumentClassifier:
             return None
 
     def predict_tags(self, content):
+        return None
         from sklearn.utils.multiclass import type_of_target
 
         if self.tags_classifier:
@@ -385,6 +391,7 @@ class DocumentClassifier:
             return []
 
     def predict_storage_path(self, content):
+        return None
         if self.storage_path_classifier:
             X = self.data_vectorizer.transform([self.preprocess_content(content)])
             storage_path_id = self.storage_path_classifier.predict(X)
